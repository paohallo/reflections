What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository using git init, it creates a .git directory where the configuration of the git repository is stored. It tracks the information about the git repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area is a temporary location to add content before committing, it allows for time for reflection on the content to commit, and what not to, and also ensure what is staged is what you really want in the repo.

How can you use the staging area to make sure you have one commit per logical
change?

Using the git diff and git diff —staged we can look at the contents of the diffs we are working on, and determine how we want to break it up before committing to the repo.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When you are planning on making changes to the system that are radically different, and not ready yet to commit, and will take time to implement, validate, and test.
The branch provides an area to keep this content separate but accessible to others as needed.

How do the diagrams help you visualize the branch structure?
The visualization can allow you to see where you are, and what others are working on also. It also helps to show the parents of each commit, so you know what is reachable etc.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The merge of two branches is where the content of two separate streams of development are combined into one. Commits between the two branches will be intermixed based on timestamp. git show can be used to determine the specific changes for a single commit. 


What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
The main issue with making git to clever on automatic merging, is that it could potentially causes more issues. The experts in the code are those working on it (in most cases), and if there are issues the conflicting developer commits can be worked out with a little discussion.
