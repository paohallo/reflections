What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository using git init, it creates a .git directory where the configuration of the git repository is stored. It tracks the information about the git repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area is a temporary location to add content before committing, it allows for time for reflection on the content to commit, and what not to, and also ensure what is staged is what you really want in the repo.

How can you use the staging area to make sure you have one commit per logical
change?

Using the git diff and git diff —staged we can look at the contents of the diffs we are working on, and determine how we want to break it up before committing to the repo.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
